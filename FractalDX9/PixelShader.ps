//############## HLSL : Pixel Shader Program ##############
//
int L;
int H;

int div;
int divL;
int divH;

float4 PS_Main( float2 Tex : vPOS  ) : COLOR
{
	bool test = false;
	
	float x_n0 = 0;
	float y_n0 = 0;
	
	float x_tm = 0;
	
	float a = ( Tex.x / div - L / 2.0f + divL * ( float(L) / div ) ) / ( L / 3.25f ) - 0.7f;
	float b = ( Tex.y / div - H / 2.0f + divH * ( float(H) / div ) ) / ( L / 3.25f );

	int i;
	int max = 100;
	for(i = 0; i < max; i++)
	{
		x_n0 = x_n0 * x_n0 - y_n0 * y_n0 + a;
		y_n0 = 2 * x_tm * y_n0 + b;
		
		if (sqrt(x_n0 * x_n0 + y_n0 * y_n0) > 3.0f)
		{
			test = true;
			break;
		}
		
		x_tm = x_n0;
	}	

	if (test)
	{
		return float4(float(i) / float(max), float(i) / 50.0f, float(i) / 10.0f, 1.0f);
	}
	else
	{
		return float4(0.0f, 0.0f, 0.0f, 1.0f);
	}
}